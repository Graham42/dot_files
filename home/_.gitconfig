[user]
	name = Graham McGregor
	email = dev@grahammcgregor.ca

[color]
	interactive = true

# make untracked and changes visibly different
[color "status"]
	added = green bold
	changed = red bold
	untracked = cyan

[color "branch"]
	current = green bold
	local = bold
	remote = red bold

[color "grep"]
	match = cyan

[pager]
	color = true

[core]
	editor = vim
	excludesfile = ~/.gitignore_global

[alias]
	l = log --graph --abbrev-commit --stat --find-copies --date=local --decorate --date-order
	d = diff
	dc = diff --cached
	dw = diff --word-diff
	dwc = diff --word-diff --cached
	s = status -s
	co = checkout
	b = branch
	# pretty print short log
	sl = log --date=short --pretty=format:'\
%C(bold blue)%cd %Creset\
%C(red)%h%Creset\
%C(auto)%d %Creset\
%C(normal)%s %Creset\
%C(bold blue)(%Creset\
%C(green)%an %Creset\
%C(bold blue)%cr)%Creset\
' --color --graph --decorate --date-order
  whitespace-eol-commit = "!f2(){ \
    git add -A; \
    git diff --cached --ignore-space-at-eol  | git apply --cached --cached --reverse; \
    git commit -m \"Format code\"; \
  }; f2"
# Requires the environment variable JIRA_URL to be set
  jira-commit = "!f(){ \
      if [ \"x$1\" == \"x\" ]; then \
        id=`git rev-parse --abbrev-ref HEAD | cut -f2 -d/ | cut -f1 -d_`; \
        args=1; \
      else \
        id=$1; \
        args=2; \
      fi; \
      git commit -em \"$id \n\n[$id]($JIRA_URL/browse/$id)\" ${@:${args}}; \
  }; f"
	standup = log --all --since=yesterday --author='Graham McGregor'
	separation = "!f(){ \
		$(git rev-parse --verify -q $1 > /dev/null); \
		if [ $? != 0 ]; then \
			echo 'error: git-separation requires a valid branch name'; \
			echo 'usage: git-separation <branch>'; \
			exit 1; \
		fi; \
		this_branch=$(git rev-parse --abbrev-ref HEAD); \
		ahead=$(git rev-list $this_branch --not $1 | wc -l); \
		behind=$(git rev-list $1 --not $this_branch | wc -l); \
		echo 'This branch is '$ahead' commits ahead, '$behind' commits behind '$1; \
	}; f"

[push]
	default = upstream
	atomic = true

[fetch]
	prune = true

[rebase]
	autoSquash = true

[pull]
	rebase = preserve

[diff]
	tool = p4Diff

[merge]
	tool = p4Merge

[mergetool]
	keepBackup = false

[mergetool "p4Merge"]
	cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
	trustExitCode = true
	keepBackup = false

[difftool "p4Diff"]
	cmd = p4merge "$LOCAL" "$REMOTE"

# vim: set ft=gitconfig:
